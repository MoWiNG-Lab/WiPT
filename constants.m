warning('off','all');

global TAG_ACT TAG_NONACT; %#ok<GVMIS> 
TAG_ACT = 1;
TAG_NONACT = -1;
PITCH = 1; YAW = 2; ROLL = 3; THREE_FINGERS_OR_FIST = 4; V_SIGN = 5; OK_SIGN = 6; STATIC = 7; none = 7;

METHOD_OVERALL_AVG_THRESHOLD = 1101;
METHOD_LOCAL_AVG_THRESHOLD = 1202;
METHOD_LOOK_AHEAD_DELTA = 1303;
METHOD_BASE_COUNTING = -1505;

DATA_17NovTestSeq = 1;
DATA_27NovTestRandVert = 2;
DATA_27NovTrain20xVert = 3;
DATA_26DecTest4xVert = 4;       DATA_SeqTest4x = 4;
DATA_26DecTrain20xVert = 5;     DATA_SeqTrain20x = 5;
DATA_5JanTest4xRandVert = 6;    % Data_RandTest4x = 6;
DATA_5JanTrain20xRandVert = 7;  % Data_RandTrain20x = 7;
DATA_6March_TestRand24x = 8;    % Data_RandTest4x = 8;
DATA_6March_TrainRand24x = 9;   % Data_RandTrain20x = 9;
DATA_6April_TestRand24x = 10;   % Data_RandTest4x = 10;
DATA_6April_TrainRand24x = 11;  % Data_RandTrain20x = 11;
DATA_14April_TestRand24x = 12;    Data_RandTest4x = 12;
DATA_14April_TrainRand24x = 13;   Data_RandTrain20x = 13;

csiranges = [[600, 27500], ...17 Nov
    [1, 50696], [3000, 216000], ...27 Nov
    [500,61650], [1,305907], ...26 Dec
    [1,65830], [1,315102], ...5 Jan
    [167714,228660], [228660,541000], ...6 March
    [22226,71665], [71666,321886], ...6 April
    [339600,389840], [89187, 339600] ...14 April : 12-12 split (50%)
    % [339600,389840], [89187, 339600] ...14 April : 20-4 split
];
csvfiles = ["wrist_finger_17Nov/csi_amplitudes.csv", ...
    "wrist_finger_27Nov/csi_amps_vertical.csv", ...
    "wrist_finger_27Nov/csi_amps_train20x_vertical.csv", ...
    "wrist_finger_26Dec/csi_amps_test4x_vertical.csv", ...
    "wrist_finger_26Dec/csi_amps_train20x_vertical.csv", ...
    "wrist_finger_5Jan/csi_amps_test4x_vertical.csv", ...
    "wrist_finger_5Jan/csi_amps_train20x_vertical.csv", ...
    "wf_6march/csi_amps_24x_vertical.csv", ...
    "wf_6march/csi_amps_24x_vertical.csv", ...
    "wf_6april/csi_amps_24x_vertical.csv", ...
    "wf_6april/csi_amps_24x_vertical.csv", ...
    "wf_14april/csi_amps_24x_vertical.csv", ...
    "wf_14april/csi_amps_24x_vertical.csv"];
true_counts_all = ['5 5 5 5 5 5 5 5 5 6 5 5 5 5 5 5 5 5 5 5 5 5 5 6#', ...
                ... ^17Nov-test-seq-4x (above)
                '5 6 6 13 10 10 13 14 16 5 5 5 9 8 8 10 12 15 6 11 ' ...
                '9 7 10 7 5 5 7 6 6 8#', ... < 27Nov-test-5x (above)
                ... v 27Nov-train-20x (below)
                '12 10 12 15 13 11 13 11 11 14 13 12 14 11 12 13 14 ' ...
                '14 13 12 11 15 15 14 12 12 13 14 13 14 13 11 12 13 ' ...
                '11 11 14 11 13 13 11 11 14 11 13 13 11 11 14 11 13 ' ...
                '13 11 13 14 12 13 13 10 12 14 12 14 12 12 13 13 11 ' ...
                '12 13 13 13 13 12 13 13 11 11 14 11 13 13 13 12 15 ' ...
                '11 13 13 12 14 13 13 12 12 12 14 13 12 14 13 11 12 ' ...
                '13 11 13 13 11 11 14 11 13 13 14 13 15 12 14 14#', ...
                ... v 26Dec-test-4x (below)
                '11 11 10 12 11 11 11 11 10 11 10 11 11 11 10 11 ' ...
                '10 11 11 11 10 11 11 11#', ...
                ... v 26Dec-train-20x (below)
                '10 8 7 8 9 9 9 8 8 11 9 9 10 10 9 9 9 9 10 11 10 ' ...
                '11 9 11 10 8 9 12 10 12 11 8 10 12 10 11 10 10 10 ' ...
                '10 10 10 19 8 10 12 10 12 10 10 11 10 10 11 11 9 10 ' ...
                '12 12 11 10 10 10 12 12 11 11 12 10 12 12 10 11 10 ' ...
                '9 10 10 10 10 9 9 11 9 10 11 9 10 11 11 9 10 10 11 ' ...
                '11 10 11 8 10 10 11 9 10 10 10 11 11 11 11 11 10 10 ' ...
                '10 9 9 10 10 10 11 12 11#', ...
                ... v 5Jan-test-4x-rand (below)
                '10 11 7 6 8 7 14 10 8 14 13 12 6 8 8 7 14 6 7 9 9 13 12 11#', ...
                ... v 5Jan-train-20x-rand (below)
                '11 12 9 6 10 8 17 12 8 19 16 15 7 12 9 7 17 7 8 10 10 ' ...
                '14 13 12 12 13 9 7 10 8 17 15 10 17 14 14 2 11 9 7 15 ' ...
                '9 5 10 10 15 13 14 12 13 10 7 10 9 18 13 8 16 13 14 7 ' ...
                '11 11 7 14 7 7 7 10 15 15 15 13 13 10 7 10 9 18 14 10 ' ...
                '16 14 13 13 7 12 10 19 7 8 10 10 15 14 14 11 15 9 7 ' ...
                '10 11 17 13 9 19 14 14 7 13 10 6 16 6 8 12 10 14 13 14#', ...
                ... 6 March-test-4x-rand
                '10 11 7 6 8 7 14 10 8 14 13 12 6 8 8 7 14 6 7 9 9 13 12 11#', ...
                ... 6 March-train-20x-rand
                '11 12 9 6 10 8 17 12 8 19 16 15 7 12 9 7 17 7 8 10 10 ' ...
                '14 13 12 12 13 9 7 10 8 17 15 10 17 14 14 2 11 9 7 15 ' ...
                '9 5 10 10 15 13 14 12 13 10 7 10 9 18 13 8 16 13 14 7 ' ...
                '11 11 7 14 7 7 7 10 15 15 15 13 13 10 7 10 9 18 14 10 ' ...
                '16 14 13 13 7 12 10 19 7 8 10 10 15 14 14 11 15 9 7 ' ...
                '10 11 17 13 9 19 14 14 7 13 10 6 16 6 8 12 10 14 13 14#', ...
                ... 6 April: Test-4x
                '10 13 9 6 7 8 14 12 9 17 14 13 6 12 10 6 15 8 6 10 10 13 11 12#' ...
                ... 6 April: Train-20x
                '14 11 9 7 10 9 15 13 8 15 9 13 6 9 9 6 15 5 7 8 9 13 11 ' ...
                '11 12 13 6 8 11 11 14 9 10 16 16 14 6 10 9 8 16 9 8 11 ' ...
                '9 14 11 14 11 12 9 6 9 9 14 11 9 14 15 6 6 11 9 8 15 6 ' ...
                '11 10 7 14 13 15 13 9 9 6 8 8 15 13 2 8 15 15 13 6 10 ' ...
                '10 6 14 6 7 10 9 14 12 12 12 13 8 6 10 8 16 13 9 15 13 ' ...
                '12 6 11 10 6 12 6 7 10 9 15 12 13#', ...
                ... 14 April: Test-4x
                '10 12 8 6 8 8 14 10 9 14 13 11 6 10 8 6 15 5 6 9 8 12 10 11#' ...
                ... 14 April: Train-20x
                '11 12 8 5 8 7 15 12 9 15 14 12 6 11 8 6 15 5 6 9 9 13 11 ' ...
                '12 10 12 8 6 8 8 14 10 9 14 15 12 6 10 7 6 14 6 7 10 8 ' ...
                '14 9 12 10 13 9 6 9 7 14 11 9 16 14 12 7 11 8 15 6 11 ' ...
                '8 10 14 11 12 12 13 10 6 9 8 15 12 8 14 16 10 6 10 8 ' ...
                '6 14 6 8 7 10 14 11 12 14 11 8 6 6 8 13 11 9 8 14 13 ' ...
                '5 11 8 7 15 6 7 10 9 14 11 9#'
                ];

durations = [];


% CSI-frames to consider in a batch
% NB: 100Hz datarate designates window_size=100 to represent 1-second of data
window_sizes = [100 150];
% How much large the larger window should be to construct the
% threshold(tau)-series in LocalAvg-method & compare in Look-Ahead-method.
window_multipliers = 10:2:32;
% From which principal component we are to select the group of principal
% components
pc_start = 11:2:25;
% How many principal components to consider from the first of the 64 PCs
max_pcas = 1:3:20;
% How many times to window-average the PCA output (larger gives smoother)
rep_avgs = 1:3:24;
% How many times of the window-size is to be merged for being isolated segment 
max_smoothing_factor_gamma = 10;
% Look-Ahead method's various categorical deltas to search the optimal
deltas = [0.15 0.17 0.20 0.22 0.25];
% Forgiveness offset value per segment
forgiveness_max = 150;
forgiveness_inc = 10;

